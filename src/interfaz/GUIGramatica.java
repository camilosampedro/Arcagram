/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import principal.Sistema;
import lista.Conjunto;
import lista.NodoSimple;
import gramatica.Gramatica;
import gramatica.Produccion;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.help.*;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author camilo
 */
public final class GUIGramatica extends javax.swing.JFrame {

    private int numeroProducciones;
    private final Conjunto conjuntoPanelesProducciones;
    private File archivo;
    private Gramatica gramatica;

    /**
     * Creates new form Interfaz
     */
    public GUIGramatica() {
        initComponents();
        gramatica = Gramatica.getInstance();
        conjuntoPanelesProducciones = new Conjunto();
        numeroProducciones = 1;
        if (!gramatica.esVacia()) {
            for (NodoSimple p = gramatica.getProducciones().getPrimero(); p != null; p = p.retornaLiga()) {
                agregarProduccion(new PanelProduccion((Produccion) p.retornaDato()));
            }
        } else {
            agregarProduccion(new PanelProduccion());
        }
        //<editor-fold defaultstate="collapsed" desc="Creación de ayuda">
        try {
            URL hsURL = this.getClass().getResource("/ayuda/ayuda.hs");
            HelpSet helpset = new HelpSet(null, hsURL);
            HelpSet.Presentation hsp = helpset.getPresentation("MainWin");

            HelpBroker help_browser = helpset.createHelpBroker();
            help_browser.setHelpSetPresentation(hsp);

            help_browser.enableHelpOnButton(btnAyuda, "introduction", helpset);
        } catch (HelpSetException ex) {
            Logger.getLogger(GUIGramatica.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jspScrollProducciones = new javax.swing.JScrollPane();
        jpProducciones = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnInfGuardar = new javax.swing.JButton();
        btnConjuntoSelecciones = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuGramatica = new javax.swing.JMenu();
        btnAgregarConjuntoDeSeleccion = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        btnGuardar = new javax.swing.JMenuItem();
        btnGuardarComo = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        btnCerrar = new javax.swing.JMenuItem();
        menuEdicion = new javax.swing.JMenu();
        btnAgregarProduccion = new javax.swing.JMenuItem();
        btnAgregarProducciones = new javax.swing.JMenuItem();
        btnEliminarProducciones = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        btnSeleccionarTodo = new javax.swing.JMenuItem();
        btnDeseleccionarTodo = new javax.swing.JMenuItem();
        menuAyuda = new javax.swing.JMenu();
        btnAcercaDe = new javax.swing.JMenuItem();
        btnAyuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gramática - Arcagram");
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(400, 170));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jpProducciones.setBackground(java.awt.Color.lightGray);
        jpProducciones.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.gray));
        jpProducciones.setLayout(new java.awt.GridLayout(0, 1, 0, 2));
        jspScrollProducciones.setViewportView(jpProducciones);

        btnAgregar.setFont(new java.awt.Font("Tahoma", 0, 3)); // NOI18N
        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/agregar.png"))); // NOI18N
        btnAgregar.setIconTextGap(0);
        btnAgregar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/eliminar.png"))); // NOI18N
        btnEliminar.setIconTextGap(0);
        btnEliminar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnInfGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/guardar.png"))); // NOI18N
        btnInfGuardar.setIconTextGap(0);
        btnInfGuardar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnInfGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInfGuardarActionPerformed(evt);
            }
        });

        btnConjuntoSelecciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/Conjunto de seleccion.png"))); // NOI18N
        btnConjuntoSelecciones.setIconTextGap(0);
        btnConjuntoSelecciones.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnConjuntoSelecciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConjuntoSeleccionesActionPerformed(evt);
            }
        });

        menuGramatica.setText("Gramatica");

        btnAgregarConjuntoDeSeleccion.setText("Agregar conjunto de seleccion");
        btnAgregarConjuntoDeSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarConjuntoDeSeleccionActionPerformed(evt);
            }
        });
        menuGramatica.add(btnAgregarConjuntoDeSeleccion);
        menuGramatica.add(jSeparator2);

        btnGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        btnGuardar.setText("Guardar gramatica");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        menuGramatica.add(btnGuardar);

        btnGuardarComo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        btnGuardarComo.setText("Guardar como...");
        btnGuardarComo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarComoActionPerformed(evt);
            }
        });
        menuGramatica.add(btnGuardarComo);
        menuGramatica.add(jSeparator1);

        btnCerrar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        btnCerrar.setText("Cerrar");
        menuGramatica.add(btnCerrar);

        jMenuBar1.add(menuGramatica);

        menuEdicion.setText("Edicion");

        btnAgregarProduccion.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, 0));
        btnAgregarProduccion.setText("Agregar producción");
        btnAgregarProduccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProduccionActionPerformed(evt);
            }
        });
        menuEdicion.add(btnAgregarProduccion);

        btnAgregarProducciones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, java.awt.event.InputEvent.CTRL_MASK));
        btnAgregarProducciones.setText("Agregar número de producciones");
        btnAgregarProducciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProduccionesActionPerformed(evt);
            }
        });
        menuEdicion.add(btnAgregarProducciones);

        btnEliminarProducciones.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, 0));
        btnEliminarProducciones.setText("Eliminar producciones seleccionadas");
        btnEliminarProducciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProduccionesActionPerformed(evt);
            }
        });
        menuEdicion.add(btnEliminarProducciones);
        menuEdicion.add(jSeparator3);

        btnSeleccionarTodo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        btnSeleccionarTodo.setText("Seleccionar todo");
        btnSeleccionarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarTodoActionPerformed(evt);
            }
        });
        menuEdicion.add(btnSeleccionarTodo);

        btnDeseleccionarTodo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        btnDeseleccionarTodo.setText("Deseleccionar todo");
        btnDeseleccionarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeseleccionarTodoActionPerformed(evt);
            }
        });
        menuEdicion.add(btnDeseleccionarTodo);

        jMenuBar1.add(menuEdicion);

        menuAyuda.setText("Ayuda");

        btnAcercaDe.setText("Acerca de");
        menuAyuda.add(btnAcercaDe);

        btnAyuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        btnAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src/ayuda.png"))); // NOI18N
        btnAyuda.setText("Ayuda");
        btnAyuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAyudaActionPerformed(evt);
            }
        });
        menuAyuda.add(btnAyuda);

        jMenuBar1.add(menuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jspScrollProducciones)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnConjuntoSelecciones)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addComponent(btnInfGuardar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jspScrollProducciones, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAgregar)
                    .addComponent(btnEliminar)
                    .addComponent(btnInfGuardar)
                    .addComponent(btnConjuntoSelecciones))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        agregarProduccion(new PanelProduccion());
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        eliminarProducciones();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnAgregarProduccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProduccionesActionPerformed
        // TODO add your handling code here:
        String insercion = JOptionPane.showInputDialog(rootPane, "Ingrese el numero de producciones que desea agregar: ", "Numero de producciones", JOptionPane.QUESTION_MESSAGE);
        try {
            int numero = Integer.parseInt(insercion);
            for (int i = numero; i > 0; i--) {
                agregarProduccion(new PanelProduccion());
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(rootPane, "No se inserto un numero entero", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarProduccionesActionPerformed

    private void btnSeleccionarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarTodoActionPerformed
        // TODO add your handling code here:
        modificarSelecciones(true);
    }//GEN-LAST:event_btnSeleccionarTodoActionPerformed

    private void btnDeseleccionarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeseleccionarTodoActionPerformed
        // TODO add your handling code here:
        modificarSelecciones(false);
    }//GEN-LAST:event_btnDeseleccionarTodoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        GUIPrincipal menu = new GUIPrincipal();
        menu.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnGuardarComoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarComoActionPerformed
        // TODO add your handling code here:
        guardarComo();
    }//GEN-LAST:event_btnGuardarComoActionPerformed

    private void btnInfGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInfGuardarActionPerformed
        // TODO add your handling code here:
        guardar();
    }//GEN-LAST:event_btnInfGuardarActionPerformed

    private void btnConjuntoSeleccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConjuntoSeleccionesActionPerformed
        // TODO add your handling code here:
        agregarConjuntoDeSeleccion();
    }//GEN-LAST:event_btnConjuntoSeleccionesActionPerformed

    private void btnEliminarProduccionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProduccionesActionPerformed
        // TODO add your handling code here:
        eliminarProducciones();
    }//GEN-LAST:event_btnEliminarProduccionesActionPerformed

    private void btnAgregarProduccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProduccionActionPerformed
        // TODO add your handling code here:
        agregarProduccion(new PanelProduccion());
    }//GEN-LAST:event_btnAgregarProduccionActionPerformed

    private void btnAgregarConjuntoDeSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarConjuntoDeSeleccionActionPerformed
        // TODO add your handling code here:
        agregarConjuntoDeSeleccion();
    }//GEN-LAST:event_btnAgregarConjuntoDeSeleccionActionPerformed

    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAyudaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUIGramatica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new GUIGramatica().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem btnAcercaDe;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JMenuItem btnAgregarConjuntoDeSeleccion;
    private javax.swing.JMenuItem btnAgregarProduccion;
    private javax.swing.JMenuItem btnAgregarProducciones;
    private javax.swing.JMenuItem btnAyuda;
    private javax.swing.JMenuItem btnCerrar;
    private javax.swing.JButton btnConjuntoSelecciones;
    private javax.swing.JMenuItem btnDeseleccionarTodo;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JMenuItem btnEliminarProducciones;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JMenuItem btnGuardarComo;
    private javax.swing.JButton btnInfGuardar;
    private javax.swing.JMenuItem btnSeleccionarTodo;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPanel jpProducciones;
    private javax.swing.JScrollPane jspScrollProducciones;
    private javax.swing.JMenu menuAyuda;
    private javax.swing.JMenu menuEdicion;
    private javax.swing.JMenu menuGramatica;
    // End of variables declaration//GEN-END:variables

    public void agregarConjuntoDeSeleccion() {
        leerGramatica();
        GUISeleccion guiSeleccion = new GUISeleccion(gramatica);
        guiSeleccion.setVisible(true);
        setVisible(false);
        guiSeleccion.setAnterior(this);
    }

    public void agregarProduccion(PanelProduccion produccion) {
        produccion.setVisible(true);
        conjuntoPanelesProducciones.agregar(produccion);
        numeroProducciones++;
        actualizarProducciones();
    }

    public void actualizarProducciones() {
        reescribirComponentes();
    }

    private void reescribirComponentes() {
        PanelProduccion produccionActual;
        int numeroProduccion = 1;
        for (NodoSimple p = conjuntoPanelesProducciones.getPrimero(); p != null;
                p = p.retornaLiga(), numeroProduccion++) {
            produccionActual = (PanelProduccion) p.retornaDato();
            produccionActual.setNumero(numeroProduccion);
            jpProducciones.add(produccionActual);
        }
        asignarTamañoVentana();
        paintAll(this.getGraphics());
    }

    public int getNumeroProducciones() {
        return numeroProducciones;
    }

    public void asignarTamañoVentana() {
        if (numeroProducciones <= 3) {
            setMinimumSize(new Dimension(400, 156 + 27 * numeroProducciones));
        }
        int alturaDeseada = 156 + 27 * numeroProducciones;
        if (alturaDeseada < Sistema.obtenerTamañoPantalla().height - 40) {
            setSize(new Dimension(this.getWidth(), 156 + 27 * numeroProducciones));
        } else {
            setSize(new Dimension(this.getWidth(), Sistema.obtenerTamañoPantalla().height - 40));
        }
    }

    public void setNumeroProducciones(int numeroProducciones) {
        this.numeroProducciones = numeroProducciones;
    }

    private void eliminarProducciones() {
        PanelProduccion produccionActual;
        NodoSimple anterior = conjuntoPanelesProducciones.getPrimero();
        int numeroProduccion = 1;
        for (NodoSimple p = conjuntoPanelesProducciones.getPrimero(); p != null;
                p = p.retornaLiga()) {
            produccionActual = (PanelProduccion) p.retornaDato();
            if (produccionActual.isSelected()) {
                jpProducciones.remove(produccionActual);
                conjuntoPanelesProducciones.desconectarNodo(anterior, p);
                numeroProducciones--;
            } else {
                produccionActual.setNumero(numeroProduccion);
                jpProducciones.add(produccionActual);
                numeroProduccion++;
            }
            anterior = p;
        }
        this.paintAll(this.getGraphics());
    }

    private void modificarSelecciones(boolean opt) {
        PanelProduccion produccionActual;
        for (NodoSimple p = conjuntoPanelesProducciones.getPrimero(); p != null;
                p = p.retornaLiga()) {
            produccionActual = (PanelProduccion) p.retornaDato();
            produccionActual.setSelected(opt);
        }
        this.paintAll(this.getGraphics());
    }

    private void guardar() {
        leerGramatica();
        if (archivo == null) {
            guardarComo();
        }
    }

    private void guardarComo() {
        leerGramatica();
        try {
            JFileChooser selector = new JFileChooser();
            selector.setFileFilter(new FileNameExtensionFilter("Archivos de gramaticas (*.gram)", "gram"));
            int resultado = selector.showSaveDialog(this);
            if (resultado == JFileChooser.APPROVE_OPTION) {
                archivo = selector.getSelectedFile();
                if(!".gram".equals(archivo.getPath().substring(archivo.getPath().length()-5, archivo.getPath().length()))){
                    archivo.renameTo(new File(archivo.getPath() + ".gram"));
                }
                ObjectOutputStream salida = new ObjectOutputStream(new FileOutputStream(archivo));
                salida.writeObject(gramatica);
                salida.close();
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUIGramatica.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(GUIGramatica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void leerGramatica() {
        gramatica = Gramatica.nuevaGramatica();
        Produccion produccionActual;
        PanelProduccion panelProduccionActual;
        Conjunto producciones = new Conjunto();
        for (NodoSimple p = conjuntoPanelesProducciones.getPrimero(); p != null; p = p.retornaLiga()) {
            panelProduccionActual = (PanelProduccion) p.retornaDato();
            produccionActual = panelProduccionActual.getProduccion();
            producciones.agregar(produccionActual);
        }
        gramatica.setProducciones(producciones);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("src/Icono.png"));

        return retValue;
    }

    public void setArchivo(File archivo) {
        this.archivo = archivo;
    }
}
